<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rt.generalframework.mapper.DictUsersMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.rt.generalframework.dto.DictUsersDto">
        <id column="user_id" property="userId"/>
        <result column="name" property="name"/>
        <result column="LOGIN_ID" property="loginId"/>
        <result column="PASSWORD" property="password"/>
        <result column="STAFF_TYPE" property="staffType"/>
        <result column="INTRODUCE" property="introduce"/>
        <result column="PHONE_NUMBER" property="phoneNumber"/>
        <result column="CREATE_DATE" property="createDate"/>
        <result column="ICD_CODES" property="icdCodes"/>
        <result column="ICD_NAMES" property="icdNames"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        user_id, name, LOGIN_ID, PASSWORD, STAFF_TYPE, INTRODUCE, PHONE_NUMBER, CREATE_DATE, ICD_CODES, ICD_NAMES
    </sql>


    <update id="updateUserSelective" parameterType="com.rt.generalframework.entity.DictUsers">
        update DICT_USERS
        <set>
            <if test="name != null">
                NAME = #{name,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                PASSWORD = #{password,jdbcType=VARCHAR},
            </if>
            <if test="introduce != null">
                introduce = #{introduce,jdbcType=VARCHAR},
            </if>
            <if test="staffType != null">
                STAFF_TYPE = #{staffType,jdbcType=CHAR},
            </if>
            <if test="createDate != null">
                CREATE_DATE = #{createDate,jdbcType=CHAR},
            </if>
            <if test="icdNames != null">
                ICD_NAMES = #{icdNames,jdbcType=CHAR},
            </if>
            <if test="icdCodes != null">
                ICD_codes = #{icdCodes,jdbcType=CHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=VARCHAR}
    </update>
    <select id="getMyMsgUser" resultMap="BaseResultMap"
            parameterType="com.rt.generalframework.entity.DictUsers">
        select u.* from dict_users u
        where u.user_id in (select msg_recivce_id from message where msg_send_id=#{userId,jdbcType=VARCHAR}
        union
        select msg_send_id from message where msg_recivce_id=#{userId,jdbcType=VARCHAR}) and
        u.staff_type=#{staffType,jdbcType=VARCHAR}
    </select>

    <select id="getUnMyMsgUser" resultMap="BaseResultMap"
            parameterType="com.rt.generalframework.entity.DictUsers">
        select u.* from dict_users u
        where u.user_id not in (select msg_recivce_id from message where msg_send_id=#{userId,jdbcType=VARCHAR}
        union
        select msg_send_id from message where msg_recivce_id=#{userId,jdbcType=VARCHAR}) and
        u.staff_type='0'
    </select>
</mapper>
